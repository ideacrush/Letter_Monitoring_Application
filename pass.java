/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p1;

import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;


/**
 *
 * @author Situ Singh
 */
public class pass extends javax.swing.JFrame {

    /**
     * Creates new form pass
     */
     Connection conn=null;
     Statement stmt=null;
     String sql;
     ResultSet rs;
    public pass() {
        initComponents();
        Color c=new Color(0,51,102);
        this.getContentPane().setBackground(c);
        lab1.hide();
        lab2.hide();
        try
        {
            String JDBC_DRIVER = "com.mysql.jdbc.Driver";
            String DB_URL = "jdbc:mysql://localhost/dak";
            String USER = "root";
            String PASS = "root";
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection(DB_URL,USER,PASS);
            stmt=conn.createStatement();
            
        }
        catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        c1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lab2 = new javax.swing.JLabel();
        lab1 = new javax.swing.JLabel();
        p1 = new javax.swing.JPasswordField();
        p3 = new javax.swing.JPasswordField();
        p2 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 102));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PASSWORD UPDATION");

        c1.setBackground(new java.awt.Color(153, 204, 255));
        c1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        c1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "User Login Password", "Admin Password", "Confidential Password", "Adminstrative Password", "Administrative Confidential Password" }));
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Current Password");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Enter New Password");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Enter New Password Again");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("UPDATE PASSWORD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lab2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lab2.setForeground(new java.awt.Color(255, 0, 0));
        lab2.setText("* Password does not match!!!");

        lab1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lab1.setForeground(new java.awt.Color(255, 0, 0));
        lab1.setText("* Enter correct password...");

        p1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        p1.setForeground(new java.awt.Color(0, 0, 255));
        p1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        p1.setDoubleBuffered(true);
        p1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                p1KeyPressed(evt);
            }
        });

        p3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        p3.setForeground(new java.awt.Color(0, 102, 0));
        p3.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        p3.setDoubleBuffered(true);
        p3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                p3KeyPressed(evt);
            }
        });

        p2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        p2.setForeground(new java.awt.Color(0, 102, 0));
        p2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        p2.setDoubleBuffered(true);
        p2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                p2KeyPressed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(19, 19, 19))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lab1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lab2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addComponent(p1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(p3, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addComponent(p2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(3, 3, 3)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lab1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(p3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(59, 59, 59))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    int user=c1.getSelectedIndex();
    if(user==0){
         String pass=String.valueOf(p1.getPassword());
        sql="select pass from password where user='userlogin';";
                try {
            String p = null;
            rs = stmt.executeQuery(sql);
            while(rs.next()){
	  	             
	  	               p = rs.getString("pass");
	  	           }
	  	        rs.close();
        if(pass.equals(p)){
            
            String a=String.valueOf(p2.getPassword());
            String b=String.valueOf(p3.getPassword());
            
            if(a.equals(b)){
                if((a.equals(""))){
                    JOptionPane.showMessageDialog(this, "Password cannot be empty");
                    
                }else{
                stmt.executeUpdate("update password set pass='"+a+"'where user='userlogin';");
                
                JOptionPane.showMessageDialog(this, "Password changed successfully!!!");
                this.setVisible(false);
                
            }}
            else{
                p2.setText("");
                p3.setText("");
        JOptionPane.showMessageDialog(this, "New passwords do not match!!!");
            }}
// TODO add your handling code here:
        else{
            p2.setText("");
            p3.setText("");
            p1.setText("");
        JOptionPane.showMessageDialog(this, "Incorrect Password!!!");}
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage()); 
        }
    }
    
    if(user==1){
         String pass=String.valueOf(p1.getPassword());
        sql="select pass from password where user='admin';";
                try {
            String p = null;
            rs = stmt.executeQuery(sql);
            while(rs.next()){
	  	             
	  	               p = rs.getString("pass");
	  	           }
	  	        rs.close();
        if(pass.equals(p)){
            
            String a=String.valueOf(p2.getPassword());
            String b=String.valueOf(p3.getPassword());
            
            if(a.equals(b)){
                if((a.equals(""))){
                    JOptionPane.showMessageDialog(this, "Password cannot be empty");
                    
                }else{
                stmt.executeUpdate("update password set pass='"+a+"' where user='admin';");
                
                JOptionPane.showMessageDialog(this, "Password changed successfully!!!");
                this.setVisible(false);
                
            }}
            else{
                p2.setText("");
                p3.setText("");
        JOptionPane.showMessageDialog(this, "New passwords do not match!!!");
            }}
// TODO add your handling code here:
        else{
            p2.setText("");
            p3.setText("");
            p1.setText("");
        JOptionPane.showMessageDialog(this, "Incorrect Password!!!");}
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage()); 
        }
    }
  
    if(user==2){
         String pass=String.valueOf(p1.getPassword());
        sql="select pass from password where user='confidential';";
                try {
            String p = null;
            rs = stmt.executeQuery(sql);
            while(rs.next()){
	  	             
	  	               p = rs.getString("pass");
	  	           }
	  	        rs.close();
        if(pass.equals(p)){
            
            String a=String.valueOf(p2.getPassword());
            String b=String.valueOf(p3.getPassword());
            
            if(a.equals(b)){
                if((a.equals(""))){
                    JOptionPane.showMessageDialog(this, "Password cannot be empty");
                    
                }else{
                stmt.executeUpdate("update password set pass='"+a+"' where user='confidential';");
                
                JOptionPane.showMessageDialog(this, "Password changed successfully!!!");
                this.setVisible(false);
                
            }}
            else{
                p2.setText("");
                p3.setText("");
        JOptionPane.showMessageDialog(this, "New passwords do not match!!!");
            }}
// TODO add your handling code here:
        else{
            p2.setText("");
            p3.setText("");
            p1.setText("");
        JOptionPane.showMessageDialog(this, "Incorrect Password!!!");}
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage()); 
        }
    }
    
    if(user==3){
         String pass=String.valueOf(p1.getPassword());
        sql="select pass from password where user='adm';";
                try {
            String p = null;
            rs = stmt.executeQuery(sql);
            while(rs.next()){
	  	             
	  	               p = rs.getString("pass");
	  	           }
	  	        rs.close();
        if(pass.equals(p)){
            
            String a=String.valueOf(p2.getPassword());
            String b=String.valueOf(p3.getPassword());
            
            if(a.equals(b)){
                if((a.equals(""))){
                    JOptionPane.showMessageDialog(this, "Password cannot be empty");
                    
                }else{
                stmt.executeUpdate("update password set pass='"+a+"'where user='userlogin';");
                
                JOptionPane.showMessageDialog(this, "Password changed successfully!!!");
                this.setVisible(false);
                
            }}
            else{
                p2.setText("");
                p3.setText("");
        JOptionPane.showMessageDialog(this, "New passwords do not match!!!");
            }}
// TODO add your handling code here:
        else{
            p2.setText("");
            p3.setText("");
            p1.setText("");
        JOptionPane.showMessageDialog(this, "Incorrect Password!!!");}
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage()); 
        }
    }
    if(user==4){
         String pass=String.valueOf(p1.getPassword());
        sql="select pass from password where user='confidentialadm';";
                try {
            String p = null;
            rs = stmt.executeQuery(sql);
            while(rs.next()){
	  	             
	  	               p = rs.getString("pass");
	  	           }
	  	        rs.close();
        if(pass.equals(p)){
            
            String a=String.valueOf(p2.getPassword());
            String b=String.valueOf(p3.getPassword());
            
            if(a.equals(b)){
                if((a.equals(""))){
                    JOptionPane.showMessageDialog(this, "Password cannot be empty");
                    
                }else{
                stmt.executeUpdate("update password set pass='"+a+"'where user='confidentialadm';");
                
                JOptionPane.showMessageDialog(this, "Password changed successfully!!!");
                this.setVisible(false);
                
            }}
            else{
                p2.setText("");
                p3.setText("");
        JOptionPane.showMessageDialog(this, "New passwords do not match!!!");
            }}
// TODO add your handling code here:
        else{
            p2.setText("");
            p3.setText("");
            p1.setText("");
        JOptionPane.showMessageDialog(this, "Incorrect Password!!!");}
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage()); 
        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void p1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p1KeyPressed
        
    }//GEN-LAST:event_p1KeyPressed

    private void p3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_p3KeyPressed

    private void p2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_p2KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         //</editor-fold>
         
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new pass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox c1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lab1;
    private javax.swing.JLabel lab2;
    private javax.swing.JPasswordField p1;
    private javax.swing.JPasswordField p2;
    private javax.swing.JPasswordField p3;
    // End of variables declaration//GEN-END:variables
}
